#BlueJ class context
comment0.target=Timer
comment0.text=\n\ A\ very\ simple\ Timer\ class\ that\ functions\ as\ a\ virtual\ stopwatch.\n\n\ This\ can\ be\ used\ as\ a\ semi-accurate\ method\ of\ measuring\ the\ elapsed\ time\n\ while\ some\ code\ is\ running.\ It\ can\ be\ used\ as\ a\ timer\ in\ a\ game,\ or\ to\n\ track\ the\ efficiency\ of\ some\ procedure.\ Methods\ for\ stop,\ start\ and\ reset\n\ allow\ easy\ control\ of\ Timer\ objects.\ Methods\ are\ included\ that\ return\n\ seconds\ (as\ an\ int),\ milliseconds\ (as\ a\ float)\ or\ a\ formatted\ String.\n\n\ @author\ Jordan\ Cohen\n\ @version\ v1.0.2\n
comment1.params=
comment1.target=Timer()
comment1.text=\n\ Constructor\ does\ nothing...\ however,\ I\ avoided\ making\ this\ class\ static\ so\n\ that\ multiple\ Timers\ could\ be\ used\ simultaneously.\n
comment2.params=
comment2.target=void\ start()
comment2.text=\n\ Start\ the\ Timer\n
comment3.params=
comment3.target=void\ end()
comment3.text=\n\ Stop\ the\ Timer\n
comment4.params=
comment4.target=void\ reset()
comment4.text=\n\ Reset\ the\ Timer\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\n\ Returns\ elapsed\ time\ as\ a\ neatly\ formatted\ String.\ Most\ practical\ for\n\ applications\ where\ output\ (rather\ than\ calculation)\ is\ the\ goal.\ The\n\ exact\ format\ will\ depend\ on\ the\ time\ elapsed\ -\ either\ ms,\ sec,\ or\ min\:sec.\n\n\ @return\ String\ \ \ neatly\ formatted\ display\ of\ time\ elapsed\n
comment6.params=
comment6.target=int\ getTimeInSeconds()
comment6.text=\n\ Return\ the\ elapsed\ time\ in\ seconds.\ This\ assumes\ that\ the\ timer\ has\ already\n\ been\ started\ and\ stopped\ (but\ not\ reset).\ For\ very\ short\ durations,\ this\ will\n\ return\ zero\ even\ though\ some\ time\ has\ elapsed.\n\n\ @return\ int\ \ The\ number\ of\ seconds\ elapsed,\ as\ an\ int.\n
comment7.params=
comment7.target=float\ getTimeInPreciseSeconds()
comment7.text=\n\ Return\ the\ elapsed\ time\ in\ seconds.\ This\ assumes\ that\ the\ timer\ has\ already\n\ been\ started\ and\ stopped\ (but\ not\ reset).\ For\ very\ short\ durations,\ this\ will\n\ return\ zero\ even\ though\ some\ time\ has\ elapsed.\n\n\ @return\ float\ \ The\ number\ of\ seconds\ elapsed,\ as\ an\ int.\n
comment8.params=
comment8.target=float\ getTimeInMilliseconds()
comment8.text=\n\ Return\ the\ elapsed\ time\ in\ seconds.\ This\ assumes\ that\ the\ timer\ has\ already\n\ been\ started\ and\ stopped\ (but\ not\ reset).\ This\ will\ return\ the\ value\ as\ a\n\ float\ and\ is\ most\ useful\ for\ shorter\ durations\ where\ second\ is\ not\ accurate\n\ enough.\n\n\ @return\ float\ \ The\ number\ of\ milliseconds\ elapsed,\ as\ a\ float.\n
numComments=9
